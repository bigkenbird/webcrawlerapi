name: CI/CD for Spring Boot with Minikube

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build JAR with Maven
        run: |
          export MAVEN_OPTS="-Dspring.profiles.active=test"
          mvn -B package -Dmaven.test.skip=true --file pom.xml

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: webcrawler-jar
          path: target/*.jar

  docker:
    needs: build
    runs-on: self-hosted
    environment: webcrawler
    outputs:
      IMAGE_TAG: ${{ steps.saveSHA.outputs.IMAGE_TAG }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: webcrawler-jar
          path: app/
      - name: Get Git Commit SHA
        id: vars
        run: echo "SHA_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: List downloaded files (debug)
        run: ls -R app/

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          ls
          docker build -t kenchen326713/webcrawler:$SHA_TAG --build-arg JAR_FILE=app/*.jar .
          docker push kenchen326713/webcrawler:$SHA_TAG
      - name: Save SHA for Deployment
        id: saveSHA
        run: echo "IMAGE_TAG=$SHA_TAG" >> $GITHUB_OUTPUT

  deploy:
    needs: docker
    runs-on: self-hosted
    steps:
      - name: Start Minikube (if not running)
        run: |
          if ! minikube status | grep -q "Running"; then
            minikube start
          fi

      - name: Ensure Minikube Uses Local Docker
        run: eval $(minikube docker-env)

      - name: Replace IMAGE_TAG in deployment.yaml
        run: |
          echo ${{ needs.docker.outputs.IMAGE_TAG }}
          sed -i'' -e 's|<IMAGE_TAG>|'"${{ needs.docker.outputs.IMAGE_TAG }}"'|g' ./manifest/deploy/deployment.yaml

      - name: Apply Kubernetes Kustomization
        run: |
          kubectl apply -k ./manifest/deploy

      - name: Check Kubernetes Deployment
        run: |
          kubectl get pods -o wide
          kubectl describe deployment webcrawler
